{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helpers.js","componentes/Mensaje.js","componentes/Resultado.js","componentes/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","Formulario","props","cantidad","guardarCantidad","plazo","guardarPlazo","guardarTotal","guardarCargando","useState","error","guardarError","onSubmit","e","preventDefault","setTimeout","total","totalCantidad","totalPlazo","calcularTotal","className","type","placeholder","onChange","parseInt","target","value","Mensaje","Resultado","toFixed","Spinner","App","componente","cargando","descripcion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec46e5cc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = ({titulo}) => (  // esta forma tenemos un codigo mas limnpio y mas corto\r\n     \r\n        <h1>{titulo} </h1> \r\n      );\r\nexport default Header;\r\n\r\n","import React, { Fragment , useState }from 'react'\r\nimport { calcularTotal } from '../helpers';\r\n\r\n\r\nconst Formulario =  (props) => {\r\n    const {cantidad,guardarCantidad,plazo,guardarPlazo,guardarTotal,guardarCargando}= props;\r\n\r\n    // definir el state\r\n    //const [cantidad, guardarCantidad] = useState(0); // para leer y guardar cantidades y mostrarlas y hace mas rapido la interfaz \r\n\r\n        //const leerCantidad = (e) => {\r\n       // console.log(e.target.value)\r\n       // guardarCantidad(parseInt(e.target.value));\r\n       //}\r\n\r\n       // definir state\r\n       const [error,guardarError] = useState(false); // para poner error y verdadero y falso\r\n\r\n\r\n       // cuando el usuario hace submit \r\n    const calculandoPrestamo = e =>{\r\n        e.preventDefault();\r\n        //console.log('enviando formulario...');\r\n        // validar\r\n        if( cantidad === 0|| plazo === \"\"){\r\n            //console.log('hay un error')\r\n            guardarError (true);\r\n            return;\r\n        }\r\n        \r\n        // elimina el error previo\r\n        guardarError (false);\r\n\r\n        // Habilitar  el spinner\r\n        guardarCargando(true);\r\n        setTimeout( ()=> {\r\n        // realizar la cotizacion\r\n       const total = calcularTotal(cantidad,plazo)\r\n       //console.log(total);\r\n\r\n\r\n       // una vez calculado guardar el total\r\n       guardarTotal(total);\r\n\r\n\r\n       // desavilitar el spinner\r\n       guardarCargando(false);\r\n        },3000);\r\n   \r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n        <form onSubmit={ calculandoPrestamo }>\r\n\r\n            {/* {cantidad}\r\n            {plazo} */}\r\n          <div className=\"row\">\r\n              <div>\r\n                  <label>Cantidad Prestamo</label>\r\n                  <input \r\n                      className=\"u-full-width\" \r\n                      type=\"number\" \r\n                      placeholder=\"Ejemplo: 3000\" \r\n                    //onChange = { leerCantidad }  // cuando el usario empieze a escribir  \r\n                    onChange = {e => guardarCantidad(parseInt(e.target.value))}\r\n                  />\r\n              </div>\r\n              <div>\r\n                  <label>Plazo para Pagar</label>\r\n                  <select \r\n                      className=\"u-full-width\"\r\n                      onChange = {e => guardarPlazo(parseInt(e.target.value))}\r\n                  >\r\n                      <option value=\"\">Seleccionar</option>\r\n                      <option value=\"3\">3 meses</option>\r\n                      <option value=\"6\">6 meses</option>\r\n                      <option value=\"12\">12 meses</option>\r\n                      <option value=\"24\">24 meses</option>\r\n                  </select>\r\n              </div>\r\n              <div>\r\n                  <input \r\n                      type=\"submit\" \r\n                      value=\"Calcular\" \r\n                      className=\"button-primary u-full-width\" \r\n                  />\r\n              </div>\r\n          </div>\r\n  </form>\r\n     {(error) ? <p className=\"error\"> Todos los campos son obligatorios</p> : null}       \r\n    \r\n  </Fragment>\r\n     );\r\n}\r\n\r\nexport default Formulario ;\r\n","export function calcularTotal (cantidad, plazo){\r\n    // cantidades\r\n    // 0-1000= 25%\r\n    // 1001-5000= 20%\r\n    // 5001-10000= 15%\r\n    // +10000= 10%\r\n\r\n    let totalCantidad;\r\n\r\n    if (cantidad <= 1000){\r\n        totalCantidad = cantidad * .25;\r\n    }else if (cantidad > 1000 && cantidad <= 5000 ){\r\n            totalCantidad = cantidad *.20;\r\n    }else if (cantidad > 5000 && cantidad <= 10000 ){\r\n        totalCantidad = cantidad *.15;\r\n    }else {\r\n        totalCantidad = cantidad * .10\r\n    }\r\n    \r\n    // console.log(totalCantidad);\r\n\r\n\r\n    // calcular el plazo\r\n    // 3 = 5% \r\n    // 6 = 10 %\r\n    // 12 = 15%\r\n    // 24 = 20%\r\n\r\n    let totalPlazo = 0;\r\n    switch(plazo){\r\n        case 3 :\r\n            totalPlazo = cantidad * .05;\r\n            break;\r\n         case 6 :   \r\n           totalPlazo = cantidad * .10;\r\n                break;\r\n         case 12 :     \r\n            totalPlazo = cantidad * .15;\r\n                    break;        \r\n        case 24 :       \r\n               totalPlazo = cantidad * .20;\r\n                        break;    \r\n        default:\r\n            break;                \r\n                     \r\n    }\r\n    //console.log(totalPlazo);\r\n    return totalPlazo + totalCantidad + cantidad;\r\n   \r\n   \r\n}","import React from 'react';\r\n\r\nconst Mensaje = () => (\r\n    <p>Agrega una cantidad y plazo a pagar  para cotizar  </p>\r\n);\r\n \r\nexport default Mensaje;","import React from 'react';\r\n\r\n\r\nconst Resultado = ({total,plazo,cantidad}) =>  ( \r\n        //<h1>Desde Resultado</h1>\r\n        <div className=\"u-full-width resultado\">\r\n            <h2>Resumen</h2>\r\n            <p>La cantidad solicitada es : ${cantidad}</p>\r\n            <p>A pagar en : ${plazo} Meses</p>\r\n            <p>Su pago Mensual es de ${(total /plazo).toFixed(2)}</p>\r\n            <p>Total a pagar : ${(total).toFixed(2)}</p>\r\n        </div>\r\n     );\r\n\r\n \r\nexport default Resultado  ;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n    <div className=\"spinner\">\r\n    <div className=\"double-bounce1\"></div>\r\n    <div className=\"double-bounce2\"></div>\r\n  </div>  \r\n  );\r\n}\r\n \r\nexport default Spinner;","import react , { Fragment , useState } from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport Mensaje from './componentes/Mensaje';\nimport Resultado from './componentes/Resultado';\nimport Spinner from './componentes/Spinner';\n\nfunction App() {\n\n  // definir el state\n  const [cantidad, guardarCantidad] = useState(0);\n  const [plazo, guardarPlazo] = useState(\"\");\n  const [total, guardarTotal] = useState(0);\n  const [cargando,guardarCargando] = useState(false);\n\n\n  let componente;\n  if(cargando){\n    componente = <Spinner/>\n\n  }else if(total === 0) {\n    componente =<Mensaje/>\n  }else{\n    componente = <Resultado\n                total = {total}\n                plazo = {plazo}\n                cantidad = {cantidad}\n\n\n              />\n\n  }\n\n  return (\n    <Fragment>\n          <Header\n           titulo=\"Cotizador de Prestamos \"  // esto serian los props\n           descripcion = \" utuliza el formulario y obten una cotizacion\"\n          />\n        <div className = \"container\">\n          <Formulario\n          cantidad = {cantidad}\n          guardarCantidad = {guardarCantidad}\n          plazo = {plazo}\n          guardarPlazo = {guardarPlazo}\n        \n          guardarTotal = {guardarTotal}\n          guardarCargando = {guardarCargando}\n          />\n\n         {/* // <p> total a pagar : ${total}</p> */}\n          <div className = \"mensajes\">  \n             {/* <Mensaje/>   */}\n             {componente}\n           </div>\n         \n        </div>\n          \n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}